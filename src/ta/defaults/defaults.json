{"boll":"function* boll(C){\r\n    //指标定义\r\n    C.DEFINE({\r\n        type: \"MAIN\",\r\n        cname: \"布林带\",\r\n        state: \"KLINE\",\r\n    });\r\n    //参数\r\n    let n = C.PARAM(3, \"N\", {memo: \"按N个周期计算均值与标准差\"});\r\n    let p = C.PARAM(5, \"P\", {memo: \"上下轨与中线的距离为P个标准差\"});\r\n    //输入序列\r\n    let close = C.SERIAL(\"CLOSE\");\r\n    //输出序列\r\n    let top = C.OUTS(\"LINE\", \"top\", {color: YELLOW});\r\n    let bottom = C.OUTS(\"LINE\", \"bottom\", {color: LIGHTRED});\r\n    //临时序列\r\n    let mid = [];\r\n    let std = [];\r\n    //计算\r\n    while(true) {\r\n        let i = yield;\r\n        mid[i] = MA(i, close, n, mid);\r\n        std[i] = STDEV(i, close, n, std);\r\n        top[i] = mid[i] + p * std[i];\r\n        bottom[i] = mid[i] - p * std[i];\r\n    }\r\n}","kdj":"function* kdj(C){\r\n    //指标定义\r\n    C.DEFINE({\r\n        type: \"SUB\",\r\n        cname: \"KDJ\",\r\n        state: \"KLINE\",\r\n    });\r\n    //参数\r\n    let n = C.PARAM(3, \"N\");\r\n    let m1 = C.PARAM(5, \"M1\");\r\n    let m2 = C.PARAM(5, \"M2\");\r\n    //输入序列\r\n    let close = C.SERIAL(\"CLOSE\");\r\n    let high = C.SERIAL(\"HIGH\");\r\n    let low = C.SERIAL(\"LOW\");\r\n    //输出序列\r\n    let k = C.OUTS(\"LINE\", \"k\", {color: RED});\r\n    let d = C.OUTS(\"LINE\", \"d\", {color: GREEN});\r\n    let j = C.OUTS(\"LINE\", \"j\", {color: YELLOW});\r\n    //临时序列\r\n    let rsv = [];\r\n    //计算\r\n    while(true) {\r\n        let i = yield;\r\n        let hv = HIGHEST(i, high, n);\r\n        let lv = LOWEST(i, low, n);\r\n        rsv[i] = (hv == lv) ? 0 : (close[i] - lv) / (hv - lv) * 100;\r\n        k[i] = SMA(i, rsv, m1, 1, k);\r\n        d[i] = SMA(i, k, m2, 1, d);\r\n        j[i] = 3*k[i] -2*d[i];\r\n    }\r\n}","ma":"function* ma(C){\r\n    //指标定义\r\n    C.DEFINE({\r\n        type: \"MAIN\",\r\n        cname: \"均线组\",\r\n        state: \"KLINE\",\r\n    });\r\n    //参数\r\n    let n1 = C.PARAM(3, \"N1\");\r\n    let n2 = C.PARAM(5, \"N2\");\r\n    let n3 = C.PARAM(10, \"N3\");\r\n    let n4 = C.PARAM(20, \"N4\");\r\n    //输入序列\r\n    let s = C.SERIAL(\"CLOSE\");\r\n    //输出序列\r\n    let s1 = C.OUTS(\"LINE\", \"ma\" + n1, {color: RED});\r\n    let s2 = C.OUTS(\"LINE\", \"ma\" + n2, {color: GREEN});\r\n    let s3 = C.OUTS(\"LINE\", \"ma\" + n3, {color: BLUE});\r\n    let s4 = C.OUTS(\"LINE\", \"ma\" + n4, {color: YELLOW});\r\n    //计算\r\n    while(true) {\r\n        let i = yield;\r\n        s1[i] = MA(i, s, n1, s1);\r\n        s2[i] = MA(i, s, n2, s2);\r\n        s3[i] = MA(i, s, n3, s3);\r\n        s4[i] = MA(i, s, n4, s4);\r\n    }\r\n}","macd":"function* macd(C) {\r\n    //指标定义\r\n    C.DEFINE({\r\n        type: \"SUB\",\r\n        cname: \"MACD\",\r\n        state: \"KLINE\",\r\n        yaxis: [\r\n            {id: 0, mid: 0, format: \"NUMBER2\"},\r\n        ]\r\n    });\r\n    //参数\r\n    let vshort = C.PARAM(20, \"SHORT\", {min: 1, memo:\"短周期\"});\r\n    let vlong = C.PARAM(35, \"LONG\", {min: 2, memo:\"长周期\"});\r\n    let vm = C.PARAM(10, \"M\", {min: 1});\r\n    //输入序列\r\n    let sclose = C.SERIAL(\"CLOSE\");\r\n    //输出序列\r\n    let diff = C.OUTS(\"LINE\", \"diff\", {color: WHITE});\r\n    let dea = C.OUTS(\"LINE\", \"dea\", {color: YELLOW, width: 1});\r\n    let bar = C.OUTS(\"RGBAR\", \"bar\");\r\n    //临时序列\r\n    let eshort = [];\r\n    let elong = [];\r\n    //计算\r\n    while(true) {\r\n        let i = yield;\r\n        eshort[i] = EMA(i, sclose, vshort, eshort);\r\n        elong[i] = EMA(i, sclose, vlong, elong);\r\n        diff[i] = eshort[i] - elong[i];\r\n        dea[i] = EMA(i, diff, vm, dea);\r\n        bar[i] = 2 * (diff[i] - dea[i]);\r\n    }\r\n}","template":"function* ${1:function_name} (C) {\r\n    // 定义指标\r\n    C.DEFINE({\r\n        type: \"${2:SUB}\", // 指标类型, SUB=副图指标, MAIN=主图指标\r\n    });\r\n\r\n    //TODO: 定义参数. 如果技术指标需要参数, 请在这里按下面的例子定义:\r\n    //example: let n = C.PARAM(3, \"N\");\r\n\r\n    //TODO: 定义输入序列. 如果技术指标需要输入序列, 请在这里按下面的例子定义:\r\n    //example: let open = C.SERIAL(\"OPEN\");\r\n\r\n    //TODO: 定义输出序列. 请在这里按下面的例子定义:\r\n    //example: let k = C.OUTS(\"LINE\", \"k\", {color: RED});\r\n\r\n    //TODO: 定义临时序列. 如果技术指标需要临时序列, 请在这里按下面的例子定义:\r\n    //example: let rsv = [];\r\n\r\n    while(true) {\r\n        let i = yield;\r\n        //TODO: 在这里填写指标的计算代码\r\n\r\n    }\r\n}","voi":"function* voi(C){\r\n    //指标定义\r\n    C.DEFINE({\r\n        type: \"SUB\",\r\n        cname: \"成交量持仓量\",\r\n        state: \"KLINE\",\r\n        yaxis: [\r\n            {id: 0, format: \"HUGE\", min: 0},\r\n            {id: 1, format: \"HUGE\"},\r\n        ],\r\n    });\r\n    //输入序列\r\n    let s_vol = C.SERIAL(\"VOLUME\");\r\n    let s_oi = C.SERIAL(\"CLOSE_OI\");\r\n    //输出序列\r\n    let vol = C.OUTS(\"PCBAR\", \"vol\", {yaxis: 0});\r\n    let oi = C.OUTS(\"LINE\", \"oi\", {color: YELLOW, yaxis: 1});\r\n    //计算\r\n    while(true) {\r\n        let i = yield;\r\n        vol[i] = s_vol[i];\r\n        oi[i] = s_oi[i];\r\n    }\r\n}"}