{"boll":"function* boll(C){\n    //指标定义\n    C.DEFINE({\n        type: \"MAIN\",\n        cname: \"布林带\",\n        state: \"KLINE\",\n    });\n    //参数\n    let n = C.PARAM(3, \"N\", {memo: \"按N个周期计算均值与标准差\"});\n    let p = C.PARAM(5, \"P\", {memo: \"上下轨与中线的距离为P个标准差\"});\n    //输出序列\n    let top = C.OUTS(\"LINE\", \"top\", {color: YELLOW});\n    let bottom = C.OUTS(\"LINE\", \"bottom\", {color: LIGHTRED});\n    //临时序列\n    let mid = [];\n    let std = [];\n    //计算\n    while(true) {\n        let i = yield;\n        mid[i] = MA(i, C.DS.close, n, mid);\n        std[i] = STDEV(i, C.DS.close, n, std);\n        top[i] = mid[i] + p * std[i];\n        bottom[i] = mid[i] - p * std[i];\n    }\n}","kdj":"function* kdj(C){\n    //指标定义\n    C.DEFINE({\n        type: \"SUB\",\n        cname: \"KDJ\",\n        state: \"KLINE\",\n    });\n    //参数\n    let n = C.PARAM(3, \"N\");\n    let m1 = C.PARAM(5, \"M1\");\n    let m2 = C.PARAM(5, \"M2\");\n    //输出序列\n    let k = C.OUTS(\"LINE\", \"k\", {color: RED});\n    let d = C.OUTS(\"LINE\", \"d\", {color: GREEN});\n    let j = C.OUTS(\"LINE\", \"j\", {color: YELLOW});\n    //临时序列\n    let rsv = [];\n    //计算\n    while(true) {\n        let i = yield;\n        let hv = HIGHEST(i, C.DS.high, n);\n        let lv = LOWEST(i, C.DS.low, n);\n        rsv[i] = (hv == lv) ? 0 : (C.DS.close[i] - lv) / (hv - lv) * 100;\n        k[i] = SMA(i, rsv, m1, 1, k);\n        d[i] = SMA(i, k, m2, 1, d);\n        j[i] = 3*k[i] -2*d[i];\n    }\n}","ma":"function* ma(C){\n    //指标定义\n    C.DEFINE({\n        type: \"MAIN\",\n        cname: \"均线组\",\n        state: \"KLINE\",\n    });\n    //参数\n    let n1 = C.PARAM(3, \"N1\");\n    let n2 = C.PARAM(5, \"N2\");\n    let n3 = C.PARAM(10, \"N3\");\n    let n4 = C.PARAM(20, \"N4\");\n    //输出序列\n    let s1 = C.OUTS(\"LINE\", \"ma\" + n1, {color: RED});\n    let s2 = C.OUTS(\"LINE\", \"ma\" + n2, {color: GREEN});\n    let s3 = C.OUTS(\"LINE\", \"ma\" + n3, {color: BLUE});\n    let s4 = C.OUTS(\"LINE\", \"ma\" + n4, {color: YELLOW});\n    //计算\n    while(true) {\n        let i = yield;\n        s1[i] = MA(i, C.DS.close, n1, s1);\n        s2[i] = MA(i, C.DS.close, n2, s2);\n        s3[i] = MA(i, C.DS.close, n3, s3);\n        s4[i] = MA(i, C.DS.close, n4, s4);\n    }\n}","macd":"function* macd(C) {\n    //指标定义\n    C.DEFINE({\n        type: \"SUB\",\n        cname: \"MACD\",\n        state: \"KLINE\",\n        yaxis: [\n            {id: 0, mid: 0, format: \"NUMBER2\"},\n        ]\n    });\n    //参数\n    let vshort = C.PARAM(20, \"SHORT\", {min: 1, memo:\"短周期\"});\n    let vlong = C.PARAM(35, \"LONG\", {min: 2, memo:\"长周期\"});\n    let vm = C.PARAM(10, \"M\", {min: 1});\n    //输出序列\n    let diff = C.OUTS(\"LINE\", \"diff\", {color: WHITE});\n    let dea = C.OUTS(\"LINE\", \"dea\", {color: YELLOW, width: 1});\n    let bar = C.OUTS(\"RGBAR\", \"bar\");\n    //临时序列\n    let eshort = [];\n    let elong = [];\n    //计算\n    while(true) {\n        let i = yield;\n        eshort[i] = EMA(i, C.DS.close, vshort, eshort);\n        elong[i] = EMA(i, C.DS.close, vlong, elong);\n        diff[i] = eshort[i] - elong[i];\n        dea[i] = EMA(i, diff, vm, dea);\n        bar[i] = 2 * (diff[i] - dea[i]);\n    }\n}","mat":"function* mat(C){\n    //指标定义\n    C.DEFINE({\n        type: \"MAIN\",\n        cname: \"均线交易策略演示\",\n        state: \"KLINE\",\n    });\n    //参数\n    let n1 = C.PARAM(3, \"N1\");  //短均线周期\n    let n2 = C.PARAM(10, \"N2\"); //长均线周期\n    //输出序列\n    let m1 = C.OUTS(\"LINE\", \"ma\" + n1, {color: RED});\n    let m2 = C.OUTS(\"LINE\", \"ma\" + n2, {color: GREEN});\n    //计算\n    while(true) {\n        let i = yield;\n        m1[i] = MA(i, C.DS.close, n1, m1);  //计算短均线值\n        m2[i] = MA(i, C.DS.close, n2, m2);  //计算长均线值\n        if (m1[i] > m2[i] && m1[i-1] <= m2[i-1])  //短均线上穿长均线，买进\n            C.ORDER(\"BUY\", \"CLOSEOPEN\", 1);\n        if (m1[i] < m2[i] && m1[i-1] >= m2[i-1])  //短均线下穿长均线，卖出\n            C.ORDER(\"SELL\", \"CLOSEOPEN\", 1);\n    }\n}","template":"function* ${1:function_name} (C) {\n    // 定义指标\n    C.DEFINE({\n        type: \"${2:SUB}\", // 指标类型, SUB=副图指标, MAIN=主图指标\n    });\n\n    //TODO: 定义参数. 如果技术指标需要参数, 请在这里按下面的例子定义:\n    //example: let n = C.PARAM(3, \"N\");\n\n    //TODO: 定义输出序列. 请在这里按下面的例子定义:\n    //example: let k = C.OUTS(\"LINE\", \"k\", {color: RED});\n\n    //TODO: 定义临时序列. 如果技术指标需要临时序列, 请在这里按下面的例子定义:\n    //example: let rsv = [];\n\n    while(true) {\n        let i = yield;\n        //TODO: 在这里填写指标的计算代码\n\n    }\n}","voi":"function* voi(C){\n    //指标定义\n    C.DEFINE({\n        type: \"SUB\",\n        cname: \"成交量持仓量\",\n        state: \"KLINE\",\n        yaxis: [\n            {id: 0, format: \"HUGE\", min: 0},\n            {id: 1, format: \"HUGE\"},\n        ],\n    });\n    //输出序列\n    let vol = C.OUTS(\"PCBAR\", \"vol\", {yaxis: 0});\n    let oi = C.OUTS(\"LINE\", \"oi\", {color: YELLOW, yaxis: 1});\n    //计算\n    while(true) {\n        let i = yield;\n        vol[i] = C.DS.volume[i];\n        oi[i] = C.DS.close_oi[i];\n    }\n}"}