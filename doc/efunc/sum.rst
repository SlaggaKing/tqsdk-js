SUM
==================================================
SUM函数用于求一个序列中最近N项的和

Example
--------------------------------------------------
.. code-block:: javascript

    s1[i] = SUM(i, s, n1, s1);      //

    
Remarks
--------------------------------------------------

Syntax
--------------------------------------------------
.. code-block:: javascript

    SUM(i, serial, n, cache)

======================== =================================================================================
Name	                 Value/Description
======================== =================================================================================
i                        必填，指定序列位置
serial                   必填，需要求值的序列
n                        必填，求值范围为从i开始往左的n项(包含第i项)
cache                    可选, 将输出结果序列填在此处可以优化性能
======================== =================================================================================

函数源码
--------------------------------------------------
.. code-block:: javascript

    function _sum(serial, n, p) {
        var s = 0;
        for (var i = p - n + 1; i <= p; i++) {
            s += serial[i];
        }
        return s;
    }

    function SUM(i, serial, n, cache) {
        if (cache === undefined || cache.length == 0 || isNaN(cache[i - 1]))
            return _sum(serial, n, i);
        return cache[i - 1] - serial[i - n] + serial[i];
    }
